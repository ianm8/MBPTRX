#ifndef UTIL_H
#define UTIL_H

#define SAMPLERATE 31250u
#define PRNG_SEED 0x12345678

#define _rev2(x)  ((((x)&1)<<1) | (((x)>>1)&1))
#define _rev4(x)  ((_rev2(x)<<2) | (_rev2((x)>>2)))
#define _rev8(x)  ((_rev4(x)<<4) | (_rev4((x)>>4)))
#define _rev16(x) ((_rev8(x)<<8) | (_rev8((x)>>8)))
#define _rev(x) (uint16_t)(_rev16(x))

#define LCD_BLACK  _rev(TFT_BLACK)
#define LCD_WHITE  _rev(TFT_WHITE)
#define LCD_RED    _rev(TFT_RED)
#define LCD_GREEN  _rev(TFT_GREEN)
#define LCD_BLUE   _rev(TFT_BLUE)
#define LCD_YELLOW _rev(TFT_YELLOW)
#define LCD_PINK   _rev(TFT_PINK)
#define LCD_PURPLE _rev(TFT_PURPLE)
#define LCD_MODE   _rev(0xf000)

namespace UTIL
{
  static const uint32_t __not_in_flash_func(map)(const uint32_t x,const uint32_t in_min, const uint32_t in_max,const uint32_t out_min, const float out_max)
  {
    // unsigned map
    if (x<in_min)
    {
      return out_min;
    }
    if (x>in_max)
    {
      return out_max;
    }
    return (x - in_min) * (out_max - out_min) / (in_max - in_min) + out_min;
  }

  static const uint32_t quadrature_divisor(const uint32_t f)
  {
    if (f < 6850000ul)
    {
      return 126;
    }
    if (f < 9500000ul)
    {
      return 88;
    }
    if (f < 13600000ul)
    {
      return 64;
    }
    if (f < 17500000ul)
    {
      return 44;
    }
    if (f < 25000000ul)
    {
      return 34;
    }
    if (f < 36000000ul)
    {
      return 24;
    }
    if (f < 45000000ul)
    {
      return 18;
    }
    if (f < 60000000ul)
    {
      return 14;
    }
    if (f < 80000000ul)
    {
      return 10;
    }
    if (f < 100000000ul)
    {
      return 8;
    }
    if (f < 146600000ul)
    {
      return 6;
    }
    return 4;
  }

  static const uint32_t prng32(void)
  {
    volatile static uint32_t state = PRNG_SEED;
    uint32_t x = state;
    x ^= x << 13;
    x ^= x >> 17;
    x ^= x << 5;
    return (state = x);
  }

  static const float __not_in_flash("fast_access_sram") s8[256] =
  {
    // tone @ FS/8
    0.00000000f,
    0.70710678f,
    1.00000000f,
    0.70710678f,
    0.00000000f,
    -0.70710678f,
    -1.00000000f,
    -0.70710678f,
    0.00000000f,
    0.70710678f,
    1.00000000f,
    0.70710678f,
    0.00000000f,
    -0.70710678f,
    -1.00000000f,
    -0.70710678f,
    0.00000000f,
    0.70710678f,
    1.00000000f,
    0.70710678f,
    0.00000000f,
    -0.70710678f,
    -1.00000000f,
    -0.70710678f,
    0.00000000f,
    0.70710678f,
    1.00000000f,
    0.70710678f,
    0.00000000f,
    -0.70710678f,
    -1.00000000f,
    -0.70710678f,
    0.00000000f,
    0.70710678f,
    1.00000000f,
    0.70710678f,
    0.00000000f,
    -0.70710678f,
    -1.00000000f,
    -0.70710678f,
    0.00000000f,
    0.70710678f,
    1.00000000f,
    0.70710678f,
    0.00000000f,
    -0.70710678f,
    -1.00000000f,
    -0.70710678f,
    0.00000000f,
    0.70710678f,
    1.00000000f,
    0.70710678f,
    0.00000000f,
    -0.70710678f,
    -1.00000000f,
    -0.70710678f,
    0.00000000f,
    0.70710678f,
    1.00000000f,
    0.70710678f,
    0.00000000f,
    -0.70710678f,
    -1.00000000f,
    -0.70710678f,
    0.00000000f,
    0.70710678f,
    1.00000000f,
    0.70710678f,
    0.00000000f,
    -0.70710678f,
    -1.00000000f,
    -0.70710678f,
    0.00000000f,
    0.70710678f,
    1.00000000f,
    0.70710678f,
    0.00000000f,
    -0.70710678f,
    -1.00000000f,
    -0.70710678f,
    0.00000000f,
    0.70710678f,
    1.00000000f,
    0.70710678f,
    0.00000000f,
    -0.70710678f,
    -1.00000000f,
    -0.70710678f,
    0.00000000f,
    0.70710678f,
    1.00000000f,
    0.70710678f,
    0.00000000f,
    -0.70710678f,
    -1.00000000f,
    -0.70710678f,
    0.00000000f,
    0.70710678f,
    1.00000000f,
    0.70710678f,
    0.00000000f,
    -0.70710678f,
    -1.00000000f,
    -0.70710678f,
    0.00000000f,
    0.70710678f,
    1.00000000f,
    0.70710678f,
    0.00000000f,
    -0.70710678f,
    -1.00000000f,
    -0.70710678f,
    0.00000000f,
    0.70710678f,
    1.00000000f,
    0.70710678f,
    0.00000000f,
    -0.70710678f,
    -1.00000000f,
    -0.70710678f,
    0.00000000f,
    0.70710678f,
    1.00000000f,
    0.70710678f,
    0.00000000f,
    -0.70710678f,
    -1.00000000f,
    -0.70710678f,
    0.00000000f,
    0.70710678f,
    1.00000000f,
    0.70710678f,
    0.00000000f,
    -0.70710678f,
    -1.00000000f,
    -0.70710678f,
    0.00000000f,
    0.70710678f,
    1.00000000f,
    0.70710678f,
    0.00000000f,
    -0.70710678f,
    -1.00000000f,
    -0.70710678f,
    0.00000000f,
    0.70710678f,
    1.00000000f,
    0.70710678f,
    0.00000000f,
    -0.70710678f,
    -1.00000000f,
    -0.70710678f,
    0.00000000f,
    0.70710678f,
    1.00000000f,
    0.70710678f,
    0.00000000f,
    -0.70710678f,
    -1.00000000f,
    -0.70710678f,
    0.00000000f,
    0.70710678f,
    1.00000000f,
    0.70710678f,
    0.00000000f,
    -0.70710678f,
    -1.00000000f,
    -0.70710678f,
    0.00000000f,
    0.70710678f,
    1.00000000f,
    0.70710678f,
    0.00000000f,
    -0.70710678f,
    -1.00000000f,
    -0.70710678f,
    0.00000000f,
    0.70710678f,
    1.00000000f,
    0.70710678f,
    0.00000000f,
    -0.70710678f,
    -1.00000000f,
    -0.70710678f,
    0.00000000f,
    0.70710678f,
    1.00000000f,
    0.70710678f,
    0.00000000f,
    -0.70710678f,
    -1.00000000f,
    -0.70710678f,
    0.00000000f,
    0.70710678f,
    1.00000000f,
    0.70710678f,
    0.00000000f,
    -0.70710678f,
    -1.00000000f,
    -0.70710678f,
    0.00000000f,
    0.70710678f,
    1.00000000f,
    0.70710678f,
    0.00000000f,
    -0.70710678f,
    -1.00000000f,
    -0.70710678f,
    0.00000000f,
    0.70710678f,
    1.00000000f,
    0.70710678f,
    0.00000000f,
    -0.70710678f,
    -1.00000000f,
    -0.70710678f,
    0.00000000f,
    0.70710678f,
    1.00000000f,
    0.70710678f,
    0.00000000f,
    -0.70710678f,
    -1.00000000f,
    -0.70710678f,
    0.00000000f,
    0.70710678f,
    1.00000000f,
    0.70710678f,
    0.00000000f,
    -0.70710678f,
    -1.00000000f,
    -0.70710678f,
    0.00000000f,
    0.70710678f,
    1.00000000f,
    0.70710678f,
    0.00000000f,
    -0.70710678f,
    -1.00000000f,
    -0.70710678f,
    0.00000000f,
    0.70710678f,
    1.00000000f,
    0.70710678f,
    0.00000000f,
    -0.70710678f,
    -1.00000000f,
    -0.70710678f,
    0.00000000f,
    0.70710678f,
    1.00000000f,
    0.70710678f,
    0.00000000f,
    -0.70710678f,
    -1.00000000f,
    -0.70710678f
  };

  static const float __not_in_flash("fast_access_sram") s32[256] =
  {
    // tone @ FS/32
    0.00000000f,
    0.19509032f,
    0.38268343f,
    0.55557023f,
    0.70710678f,
    0.83146961f,
    0.92387953f,
    0.98078528f,
    1.00000000f,
    0.98078528f,
    0.92387953f,
    0.83146961f,
    0.70710678f,
    0.55557023f,
    0.38268343f,
    0.19509032f,
    0.00000000f,
    -0.19509032f,
    -0.38268343f,
    -0.55557023f,
    -0.70710678f,
    -0.83146961f,
    -0.92387953f,
    -0.98078528f,
    -1.00000000f,
    -0.98078528f,
    -0.92387953f,
    -0.83146961f,
    -0.70710678f,
    -0.55557023f,
    -0.38268343f,
    -0.19509032f,
    0.00000000f,
    0.19509032f,
    0.38268343f,
    0.55557023f,
    0.70710678f,
    0.83146961f,
    0.92387953f,
    0.98078528f,
    1.00000000f,
    0.98078528f,
    0.92387953f,
    0.83146961f,
    0.70710678f,
    0.55557023f,
    0.38268343f,
    0.19509032f,
    0.00000000f,
    -0.19509032f,
    -0.38268343f,
    -0.55557023f,
    -0.70710678f,
    -0.83146961f,
    -0.92387953f,
    -0.98078528f,
    -1.00000000f,
    -0.98078528f,
    -0.92387953f,
    -0.83146961f,
    -0.70710678f,
    -0.55557023f,
    -0.38268343f,
    -0.19509032f,
    0.00000000f,
    0.19509032f,
    0.38268343f,
    0.55557023f,
    0.70710678f,
    0.83146961f,
    0.92387953f,
    0.98078528f,
    1.00000000f,
    0.98078528f,
    0.92387953f,
    0.83146961f,
    0.70710678f,
    0.55557023f,
    0.38268343f,
    0.19509032f,
    0.00000000f,
    -0.19509032f,
    -0.38268343f,
    -0.55557023f,
    -0.70710678f,
    -0.83146961f,
    -0.92387953f,
    -0.98078528f,
    -1.00000000f,
    -0.98078528f,
    -0.92387953f,
    -0.83146961f,
    -0.70710678f,
    -0.55557023f,
    -0.38268343f,
    -0.19509032f,
    0.00000000f,
    0.19509032f,
    0.38268343f,
    0.55557023f,
    0.70710678f,
    0.83146961f,
    0.92387953f,
    0.98078528f,
    1.00000000f,
    0.98078528f,
    0.92387953f,
    0.83146961f,
    0.70710678f,
    0.55557023f,
    0.38268343f,
    0.19509032f,
    0.00000000f,
    -0.19509032f,
    -0.38268343f,
    -0.55557023f,
    -0.70710678f,
    -0.83146961f,
    -0.92387953f,
    -0.98078528f,
    -1.00000000f,
    -0.98078528f,
    -0.92387953f,
    -0.83146961f,
    -0.70710678f,
    -0.55557023f,
    -0.38268343f,
    -0.19509032f,
    0.00000000f,
    0.19509032f,
    0.38268343f,
    0.55557023f,
    0.70710678f,
    0.83146961f,
    0.92387953f,
    0.98078528f,
    1.00000000f,
    0.98078528f,
    0.92387953f,
    0.83146961f,
    0.70710678f,
    0.55557023f,
    0.38268343f,
    0.19509032f,
    0.00000000f,
    -0.19509032f,
    -0.38268343f,
    -0.55557023f,
    -0.70710678f,
    -0.83146961f,
    -0.92387953f,
    -0.98078528f,
    -1.00000000f,
    -0.98078528f,
    -0.92387953f,
    -0.83146961f,
    -0.70710678f,
    -0.55557023f,
    -0.38268343f,
    -0.19509032f,
    0.00000000f,
    0.19509032f,
    0.38268343f,
    0.55557023f,
    0.70710678f,
    0.83146961f,
    0.92387953f,
    0.98078528f,
    1.00000000f,
    0.98078528f,
    0.92387953f,
    0.83146961f,
    0.70710678f,
    0.55557023f,
    0.38268343f,
    0.19509032f,
    0.00000000f,
    -0.19509032f,
    -0.38268343f,
    -0.55557023f,
    -0.70710678f,
    -0.83146961f,
    -0.92387953f,
    -0.98078528f,
    -1.00000000f,
    -0.98078528f,
    -0.92387953f,
    -0.83146961f,
    -0.70710678f,
    -0.55557023f,
    -0.38268343f,
    -0.19509032f,
    0.00000000f,
    0.19509032f,
    0.38268343f,
    0.55557023f,
    0.70710678f,
    0.83146961f,
    0.92387953f,
    0.98078528f,
    1.00000000f,
    0.98078528f,
    0.92387953f,
    0.83146961f,
    0.70710678f,
    0.55557023f,
    0.38268343f,
    0.19509032f,
    0.00000000f,
    -0.19509032f,
    -0.38268343f,
    -0.55557023f,
    -0.70710678f,
    -0.83146961f,
    -0.92387953f,
    -0.98078528f,
    -1.00000000f,
    -0.98078528f,
    -0.92387953f,
    -0.83146961f,
    -0.70710678f,
    -0.55557023f,
    -0.38268343f,
    -0.19509032f,
    0.00000000f,
    0.19509032f,
    0.38268343f,
    0.55557023f,
    0.70710678f,
    0.83146961f,
    0.92387953f,
    0.98078528f,
    1.00000000f,
    0.98078528f,
    0.92387953f,
    0.83146961f,
    0.70710678f,
    0.55557023f,
    0.38268343f,
    0.19509032f,
    0.00000000f,
    -0.19509032f,
    -0.38268343f,
    -0.55557023f,
    -0.70710678f,
    -0.83146961f,
    -0.92387953f,
    -0.98078528f,
    -1.00000000f,
    -0.98078528f,
    -0.92387953f,
    -0.83146961f,
    -0.70710678f,
    -0.55557023f,
    -0.38268343f,
    -0.19509032f
  };

  static const float __not_in_flash("fast_access_sram") s64[256] =
  {
    // tone @ FS/64
    0.00000000f,
    0.09801714f,
    0.19509032f,
    0.29028468f,
    0.38268343f,
    0.47139674f,
    0.55557023f,
    0.63439328f,
    0.70710678f,
    0.77301045f,
    0.83146961f,
    0.88192126f,
    0.92387953f,
    0.95694034f,
    0.98078528f,
    0.99518473f,
    1.00000000f,
    0.99518473f,
    0.98078528f,
    0.95694034f,
    0.92387953f,
    0.88192126f,
    0.83146961f,
    0.77301045f,
    0.70710678f,
    0.63439328f,
    0.55557023f,
    0.47139674f,
    0.38268343f,
    0.29028468f,
    0.19509032f,
    0.09801714f,
    0.00000000f,
    -0.09801714f,
    -0.19509032f,
    -0.29028468f,
    -0.38268343f,
    -0.47139674f,
    -0.55557023f,
    -0.63439328f,
    -0.70710678f,
    -0.77301045f,
    -0.83146961f,
    -0.88192126f,
    -0.92387953f,
    -0.95694034f,
    -0.98078528f,
    -0.99518473f,
    -1.00000000f,
    -0.99518473f,
    -0.98078528f,
    -0.95694034f,
    -0.92387953f,
    -0.88192126f,
    -0.83146961f,
    -0.77301045f,
    -0.70710678f,
    -0.63439328f,
    -0.55557023f,
    -0.47139674f,
    -0.38268343f,
    -0.29028468f,
    -0.19509032f,
    -0.09801714f,
    0.00000000f,
    0.09801714f,
    0.19509032f,
    0.29028468f,
    0.38268343f,
    0.47139674f,
    0.55557023f,
    0.63439328f,
    0.70710678f,
    0.77301045f,
    0.83146961f,
    0.88192126f,
    0.92387953f,
    0.95694034f,
    0.98078528f,
    0.99518473f,
    1.00000000f,
    0.99518473f,
    0.98078528f,
    0.95694034f,
    0.92387953f,
    0.88192126f,
    0.83146961f,
    0.77301045f,
    0.70710678f,
    0.63439328f,
    0.55557023f,
    0.47139674f,
    0.38268343f,
    0.29028468f,
    0.19509032f,
    0.09801714f,
    0.00000000f,
    -0.09801714f,
    -0.19509032f,
    -0.29028468f,
    -0.38268343f,
    -0.47139674f,
    -0.55557023f,
    -0.63439328f,
    -0.70710678f,
    -0.77301045f,
    -0.83146961f,
    -0.88192126f,
    -0.92387953f,
    -0.95694034f,
    -0.98078528f,
    -0.99518473f,
    -1.00000000f,
    -0.99518473f,
    -0.98078528f,
    -0.95694034f,
    -0.92387953f,
    -0.88192126f,
    -0.83146961f,
    -0.77301045f,
    -0.70710678f,
    -0.63439328f,
    -0.55557023f,
    -0.47139674f,
    -0.38268343f,
    -0.29028468f,
    -0.19509032f,
    -0.09801714f,
    0.00000000f,
    0.09801714f,
    0.19509032f,
    0.29028468f,
    0.38268343f,
    0.47139674f,
    0.55557023f,
    0.63439328f,
    0.70710678f,
    0.77301045f,
    0.83146961f,
    0.88192126f,
    0.92387953f,
    0.95694034f,
    0.98078528f,
    0.99518473f,
    1.00000000f,
    0.99518473f,
    0.98078528f,
    0.95694034f,
    0.92387953f,
    0.88192126f,
    0.83146961f,
    0.77301045f,
    0.70710678f,
    0.63439328f,
    0.55557023f,
    0.47139674f,
    0.38268343f,
    0.29028468f,
    0.19509032f,
    0.09801714f,
    0.00000000f,
    -0.09801714f,
    -0.19509032f,
    -0.29028468f,
    -0.38268343f,
    -0.47139674f,
    -0.55557023f,
    -0.63439328f,
    -0.70710678f,
    -0.77301045f,
    -0.83146961f,
    -0.88192126f,
    -0.92387953f,
    -0.95694034f,
    -0.98078528f,
    -0.99518473f,
    -1.00000000f,
    -0.99518473f,
    -0.98078528f,
    -0.95694034f,
    -0.92387953f,
    -0.88192126f,
    -0.83146961f,
    -0.77301045f,
    -0.70710678f,
    -0.63439328f,
    -0.55557023f,
    -0.47139674f,
    -0.38268343f,
    -0.29028468f,
    -0.19509032f,
    -0.09801714f,
    0.00000000f,
    0.09801714f,
    0.19509032f,
    0.29028468f,
    0.38268343f,
    0.47139674f,
    0.55557023f,
    0.63439328f,
    0.70710678f,
    0.77301045f,
    0.83146961f,
    0.88192126f,
    0.92387953f,
    0.95694034f,
    0.98078528f,
    0.99518473f,
    1.00000000f,
    0.99518473f,
    0.98078528f,
    0.95694034f,
    0.92387953f,
    0.88192126f,
    0.83146961f,
    0.77301045f,
    0.70710678f,
    0.63439328f,
    0.55557023f,
    0.47139674f,
    0.38268343f,
    0.29028468f,
    0.19509032f,
    0.09801714f,
    0.00000000f,
    -0.09801714f,
    -0.19509032f,
    -0.29028468f,
    -0.38268343f,
    -0.47139674f,
    -0.55557023f,
    -0.63439328f,
    -0.70710678f,
    -0.77301045f,
    -0.83146961f,
    -0.88192126f,
    -0.92387953f,
    -0.95694034f,
    -0.98078528f,
    -0.99518473f,
    -1.00000000f,
    -0.99518473f,
    -0.98078528f,
    -0.95694034f,
    -0.92387953f,
    -0.88192126f,
    -0.83146961f,
    -0.77301045f,
    -0.70710678f,
    -0.63439328f,
    -0.55557023f,
    -0.47139674f,
    -0.38268343f,
    -0.29028468f,
    -0.19509032f,
    -0.09801714f  
  };
}

#endif